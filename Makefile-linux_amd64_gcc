
export CFLAGS := -fPIC

all:
ifeq ($(wildcard ${CMAKE_CURRENT_BINARY_DIR}/openssl),)	
	cp -a ${CMAKE_CURRENT_LIST_DIR}/openssl ${CMAKE_CURRENT_BINARY_DIR}/openssl
# http://wiki.openssl.org/index.php/Compilation_and_Installation#Modifying_Build_Settings	
	perl -i -p -e 's#^"linux-x86_64",\s*"gcc:-m64 -DL_ENDIAN -DTERMIO -O3#"linux-x86_64", "gcc:-m64 -DL_ENDIAN -DTERMIO -O3 ${${PROJECT_NAME}_CFLAGS}#g' ${CMAKE_CURRENT_BINARY_DIR}/openssl/Configure
	perl -i -p -e 's#^install: all install_docs install_sw#install: all install_sw#g' ${CMAKE_CURRENT_BINARY_DIR}/openssl/Makefile.org	
	cd ${CMAKE_CURRENT_BINARY_DIR}/openssl && $(SH) ./Configure \
		linux-x86_64 \
		shared \
		--openssldir=${CMAKE_CURRENT_BINARY_DIR}/openssl_install
	cd ${CMAKE_CURRENT_BINARY_DIR}/openssl && $(MAKE)
	cd ${CMAKE_CURRENT_BINARY_DIR}/openssl && $(MAKE) install
	mkdir -p ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}
	cp ${CMAKE_CURRENT_BINARY_DIR}/openssl/libcrypto.a ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/libcrypto.a
	cp ${CMAKE_CURRENT_BINARY_DIR}/openssl/libssl.a ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/libssl.a
else
	@echo "[${CMAKE_CURRENT_BINARY_DIR}/openssl] directory found, skipping build"
endif		
